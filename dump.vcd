$date
	Fri Oct 25 11:22:54 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 16 ! sum [15:0] $end
$var wire 1 " co $end
$var reg 16 # a [15:0] $end
$var reg 16 $ b [15:0] $end
$var reg 1 % ci $end
$scope module f $end
$var wire 16 & a [15:0] $end
$var wire 16 ' b [15:0] $end
$var wire 1 % ci $end
$var wire 16 ( sum [15:0] $end
$var wire 1 " co $end
$var wire 1 ) c1 $end
$scope module f1 $end
$var wire 8 * a [7:0] $end
$var wire 8 + b [7:0] $end
$var wire 1 % ci $end
$var wire 8 , sum [7:0] $end
$var wire 1 ) co $end
$var wire 1 - c1 $end
$scope module f1 $end
$var wire 4 . a [3:0] $end
$var wire 4 / b [3:0] $end
$var wire 1 % ci $end
$var wire 4 0 sum [3:0] $end
$var wire 1 - co $end
$var wire 1 1 c3 $end
$var wire 1 2 c2 $end
$var wire 1 3 c1 $end
$scope module FA0 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 % cin $end
$var wire 1 3 cout $end
$var wire 1 6 k $end
$var wire 1 7 sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 3 cin $end
$var wire 1 2 cout $end
$var wire 1 : k $end
$var wire 1 ; sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 2 cin $end
$var wire 1 1 cout $end
$var wire 1 > k $end
$var wire 1 ? sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 1 cin $end
$var wire 1 - cout $end
$var wire 1 B k $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 4 D a [3:0] $end
$var wire 4 E b [3:0] $end
$var wire 1 - ci $end
$var wire 4 F sum [3:0] $end
$var wire 1 ) co $end
$var wire 1 G c3 $end
$var wire 1 H c2 $end
$var wire 1 I c1 $end
$scope module FA0 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 - cin $end
$var wire 1 I cout $end
$var wire 1 L k $end
$var wire 1 M sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 I cin $end
$var wire 1 H cout $end
$var wire 1 P k $end
$var wire 1 Q sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 H cin $end
$var wire 1 G cout $end
$var wire 1 T k $end
$var wire 1 U sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 G cin $end
$var wire 1 ) cout $end
$var wire 1 X k $end
$var wire 1 Y sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 8 Z a [7:0] $end
$var wire 8 [ b [7:0] $end
$var wire 1 ) ci $end
$var wire 8 \ sum [7:0] $end
$var wire 1 " co $end
$var wire 1 ] c1 $end
$scope module f1 $end
$var wire 4 ^ a [3:0] $end
$var wire 4 _ b [3:0] $end
$var wire 1 ) ci $end
$var wire 4 ` sum [3:0] $end
$var wire 1 ] co $end
$var wire 1 a c3 $end
$var wire 1 b c2 $end
$var wire 1 c c1 $end
$scope module FA0 $end
$var wire 1 d a $end
$var wire 1 e b $end
$var wire 1 ) cin $end
$var wire 1 c cout $end
$var wire 1 f k $end
$var wire 1 g sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 c cin $end
$var wire 1 b cout $end
$var wire 1 j k $end
$var wire 1 k sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 b cin $end
$var wire 1 a cout $end
$var wire 1 n k $end
$var wire 1 o sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 a cin $end
$var wire 1 ] cout $end
$var wire 1 r k $end
$var wire 1 s sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 4 t a [3:0] $end
$var wire 4 u b [3:0] $end
$var wire 1 ] ci $end
$var wire 4 v sum [3:0] $end
$var wire 1 " co $end
$var wire 1 w c3 $end
$var wire 1 x c2 $end
$var wire 1 y c1 $end
$scope module FA0 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 ] cin $end
$var wire 1 y cout $end
$var wire 1 | k $end
$var wire 1 } sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var wire 1 y cin $end
$var wire 1 x cout $end
$var wire 1 "" k $end
$var wire 1 #" sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 x cin $end
$var wire 1 w cout $end
$var wire 1 &" k $end
$var wire 1 '" sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 (" a $end
$var wire 1 )" b $end
$var wire 1 w cin $end
$var wire 1 " cout $end
$var wire 1 *" k $end
$var wire 1 +" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
b0 v
b0 u
b0 t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
b0 `
b0 _
b0 ^
0]
b0 \
b0 [
b0 Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
1M
0L
0K
0J
0I
0H
0G
b1 F
b0 E
b0 D
0C
0B
1A
1@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
b0 0
b1000 /
b1000 .
1-
b10000 ,
b1000 +
b1000 *
0)
b10000 (
b1000 '
b1000 &
0%
b1000 $
b1000 #
0"
b10000 !
$end
#10
1Y
1G
1H
1I
0M
0U
b10 0
1;
b10000010 !
b10000010 (
b10000010 ,
b1000 F
0Q
1L
1T
1:
1P
1K
1S
18
1N
b101 E
b1010 .
b10 D
b1011000 +
b101010 *
b1011000 $
b1011000 '
b101010 #
b101010 &
#20
b1 \
b1 `
1g
0I
1)
1M
17
0Q
b1 F
0Y
0;
1?
b100011101 !
b100011101 (
b11101 ,
b1101 0
1C
0-
16
0P
1X
0:
1>
1B
15
1O
0S
1W
08
1<
0@
1R
b1001 /
b1011 E
b100 .
b110 D
b10111001 +
b1100100 *
b10111001 $
b10111001 '
b1100100 #
b1100100 &
